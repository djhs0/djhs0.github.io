(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{265:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"python3中string-encode-之后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python3中string-encode-之后","aria-hidden":"true"}},[t._v("#")]),t._v(" python3中string.encode()之后")]),t._v(" "),a("h2",{attrs:{id:"引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引言","aria-hidden":"true"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),a("p",[t._v("​\t在学习python的时候，就耳闻python2中的string会时不时出现很奇怪的unicode error。没办法，自认为是个傻瓜，又想偷懒，所以就直接学习python3了，但是无论如何选择，字符串是一个编程语言必须面对的情景，也必须提供对字符串的支持。虽说在python3中，python改善了2中ascii和unicode隐式转换的坑，但是如果不了解背后的知识，还是比较容易遇到编码的错误。那么就来学一学，记一记。")]),t._v(" "),a("h2",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),a("p",[t._v("​\t在python3处理字符串的时候，会频繁的遇到编码解码的情况，即"),a("code",[t._v("encode()")]),t._v("、"),a("code",[t._v("decode()")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"一"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("b'\\xe4\\xb8\\x80'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("如上例，字符串"),a("code",[t._v("一")]),t._v("被编码之后出现了一串字母数字的组合，那么这个东西要怎么解释呢？")]),t._v(" "),a("h2",{attrs:{id:"求知之路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#求知之路","aria-hidden":"true"}},[t._v("#")]),t._v(" 求知之路")]),t._v(" "),a("h3",{attrs:{id:"_1-疯狂的search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-疯狂的search","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 疯狂的search")]),t._v(" "),a("p",[t._v("​\t首先在遇到问题，一头雾水的时候，这正是由于自己掌握的情报比较少，无从下手，这时就需要借助整个人类的力量，在搜索引擎中的海量资源中寻找有用的知识，下面是我找到的一篇文章，给我搜寻答案下的方向。")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://nedbatchelder.com/text/unipain.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unicode之痛(原文)"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"http://pycoders-weekly-chinese.readthedocs.io/en/latest/issue5/unipain.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unicode之痛(中文)"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("这篇文章总结了5个事实，那把这5个事实当做结论拿出来。")]),t._v(" "),a("ol",[a("li",[t._v("程序的输入输出的都是bytes。")]),t._v(" "),a("li",[t._v("编程中文本不止256个符号。")]),t._v(" "),a("li",[t._v("程序必须处理byte和unicode。")]),t._v(" "),a("li",[t._v("byte流中不会包含编码信息。")]),t._v(" "),a("li",[t._v("指明的编码可能是错误的。")])]),t._v(" "),a("h3",{attrs:{id:"_2-理解byte"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-理解byte","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 理解byte")]),t._v(" "),a("p",[t._v("​\t可以知道的是bit是0或者1，占一位，而byte是8个bit的组合，叫做字节。从上面的搜索来看，在程序中输入输出都是按照bytes来的，也就是程序，或者说计算机接收或者处理的最小单位是byte。哎？不是还有bit吗？确实计算机中信息的最小单位是bit，但是bit表示电平的开闭，由于一个bit并不能表示计算机经常处理的信息，所以在计算机中都是将8个bit组合在一起成byte来表示信息。这样程序输入输出(I/O)，计算机存储，与网络传输的最小单位就是byte，毕竟如果用bit传输，根本无法判断传输的边界。")]),t._v(" "),a("h3",{attrs:{id:"_3-unicode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-unicode","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. unicode")]),t._v(" "),a("p",[t._v("​\t在计算机，网络从USA扩展到非英语世界后，传统的使用一个byte来表示英语世界中的，数字，字母，及一些常用的符号的机制就失效了，由于一个byte只有8bit，即只能存储256种信息，而世界上的中文字符，日文字符，阿拉伯字符可不只256种，所以在经过研究，各国都拿出来自己的标准，又不相通，导致一段时间的混乱，最后拿出了unicode方案，unicode规范中，unicode4.0采用了4byte来表示字符，这样就可以表示一百多万个字符，目前只把unicode码中的几十万个码映射到具体的字符上了。就是说unicode规定了一个字符对应的整数值，比如"),a("code",[t._v("一")]),t._v("对应的值就是"),a("code",[t._v("19968")]),t._v("，这个值叫做"),a("code",[t._v("code point")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_4-unicode和utf-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-unicode和utf-8","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. unicode和utf-8")]),t._v(" "),a("p",[t._v("​\tunicode和utf-8，有了unicode就可以表示世界上所有的字符了，那么为什么还有utf-8等呢？")]),t._v(" "),a("p",[t._v("那是因为unicode4.0使用4个byte来表示字符，那么如果我要表示"),a("code",[t._v("a")]),t._v("这个字符呢？它的code point值为97，要是原原本本的使用unicode来表示那么就成了"),a("code",[t._v("00000000 00000000 00000000 01100001")]),t._v("，这样一看就知道前面的3byte是不要的，所以还需要一种规则来翻译unicode。utf-8出世！utf-8编码规则是一种变长的编码规则，通过上面的例子可以看出，在表示英文字符是实际上并不需要4个byte，只要一个byte就可以了。而对于中文，则需要2-4个byte。")]),t._v(" "),a("p",[t._v("UTF-8编码规则：")]),t._v(" "),a("ol",[a("li",[t._v("对于对于单字节字符，这个字节的第1位为0，后7位为unicode码，所以对于英文来讲utf-8编码和ASCII编码时一样的。")]),t._v(" "),a("li",[t._v("对于n字节字符，第一个字节的前n位为1，n+1位为0,后面n-1个字节的前两位都为10,其他位放置unicode码。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Unicode符号范围(十六进制)")]),t._v(" "),a("th",[t._v("UTF-8编码方式（二进制）")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("0000 0000-0000 007F")]),t._v(" "),a("td",[t._v("0xxxxxxx")])]),t._v(" "),a("tr",[a("td",[t._v("0000 0080-0000 07FF")]),t._v(" "),a("td",[t._v("110xxxxx 10xxxxxx")])]),t._v(" "),a("tr",[a("td",[t._v("0000 0800-0000 FFFF")]),t._v(" "),a("td",[t._v("1110xxxx 10xxxxxx 10xxxxxx")])]),t._v(" "),a("tr",[a("td",[t._v("0001 0000-0010 FFFF")]),t._v(" "),a("td",[t._v("11110xxx 10xxxxxx 10xxxxxx 10xxxxxx")])])])]),t._v(" "),a("p",[t._v("最后提一个知乎上很好的总结:"),a("strong",[t._v("unicode是字符集，uft-8是编码规则")])]),t._v(" "),a("h3",{attrs:{id:"_5-最终解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-最终解释","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 最终解释")]),t._v(" "),a("p",[t._v("​\t对于"),a("code",[t._v("一")]),t._v("，可以通过python的ord函数来查看这个字符的unicode code point。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("help")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ord")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nHelp on built"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" function "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ord")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" module builtins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ord")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Return the Unicode code point "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a one"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("character string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ord")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"一"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19968")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("那么python中encode之后的一串符号表示的是什么呢？")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"一"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("b'\\xe4\\xb8\\x80'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("实际上，python3中encode()之后会得到一个byte串，这个byte串中存放着编码值，比如上例中使用encode()，没有传入参数，则默认的是utf-8编码。那么得到的byte串也就存放着utf-8从unicode通过一些规则得到的码值了，我们将它们转换会去看看。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 得到了b'\\xe4\\xb8\\x80'，将其转换成二进制，\\x代表值16进制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xe4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0b11100100'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xb8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0b10111000'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0b10000000'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终得到的二进制为11100100 10111000 10000000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行下utf-8的规则，对于3个byte的，第一个byte的前3位为1，第4位为0.其他byte(也就是后面两个  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# byte)的前2位为10.除了前面提到的位，其他位置放置unicode码。所以第一个byte的unicode码是0100,  # 第二个byte的unicode码为111000，第三个byte的unicode码为000000,然后拼接到一起就是")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 0100111000000000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b0100111000000000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意前面0b表示这个数是二进制的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19968")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("chr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19968")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'一'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chr的解释")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("help")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("chr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nHelp on built"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" function "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("chr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" module builtins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("chr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Return a Unicode string of one character "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" ordinal i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10ffff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br")])])])},[],!1,null,null,null);s.default=e.exports}}]);