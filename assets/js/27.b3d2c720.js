(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{278:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"引入参数对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入参数对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 引入参数对象")]),t._v(" "),a("p",[t._v("在编程中，总会看到一组数据项总是结伴而行，出没于一个又一个函数，这样的数据项就是所谓的数据泥团，可以使用一个数据结构代替它们。"),a("br"),t._v("\n引入参数对象后的好处：")]),t._v(" "),a("ol",[a("li",[t._v("使数据项直接边界清晰")]),t._v(" "),a("li",[t._v("缩短函数的参数列表")]),t._v(" "),a("li",[t._v("规范访问数据项的形式")])]),t._v(" "),a("h2",{attrs:{id:"例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子","aria-hidden":"true"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),a("h3",{attrs:{id:"原始"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原始","aria-hidden":"true"}},[t._v("#")]),t._v(" 原始")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// InsideRange 判断温度是否在指定范围内")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("InsideRange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temperature"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" min"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" temperature "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" temperature "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" max "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("在上面的例子中，判断一个温度是否在正常范围内，所以函数中传入了温度，最小温度，最大温度三个参数项。例子中min，max可以看成是一个范围，出入min，max过于繁琐。")]),t._v(" "),a("h3",{attrs:{id:"重构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重构","aria-hidden":"true"}},[t._v("#")]),t._v(" 重构")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Range 整数范围")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Range "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tMin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Max "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// InsideRange2 判断温度是否在指定范围内")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("InsideRange2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temperature "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" temperature "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" temperature "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Max "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("在重构例子中，将min，max封装到一个结构体Range中，然后在函数的参数列表中替换min, max为Range。")]),t._v(" "),a("ol",[a("li",[t._v("数据项边界清晰"),a("br"),t._v("\n将Min，Max封装之后，Min, Max之间的关系紧密了，和templature之间的关系清晰了")]),t._v(" "),a("li",[t._v("缩短函数的参数列表"),a("br"),t._v("\n函数的参数列表从3个降到2个，较少的参数可以使函数更好理解。"),a("br"),t._v(" "),a("strong",[t._v("讨论")]),t._v("：封装参数列表会不会导致参数被隐藏，导致函数变得难理解了？"),a("br"),t._v(" "),a("strong",[t._v("解答")]),t._v("：我认为不会，引入参数对象的前提是可以找到一些参数直接的紧密连接，封装这些参数之后，当看到参数对象之后就能一眼明白这个参数对象代表的意思。如果强行封装一些没有联系的参数，那么一开始从封装对象的命名就不好命，即使想出来一个名字，也违反了单一职责原则。")]),t._v(" "),a("li",[t._v("规范访问数据项的形式"),a("br"),t._v("\n在原始函数中，温度范围可以被定义为min, max，也可以被定义为floor, top。每个函数可能由不同的人编写，每个人的命名习惯也不同，这样在一个项目中就会出现差异。当使用参数对象之后，定义温度范围的方式统一，访问温度范围的方式也统一了，"),a("strong",[t._v("r.Min, r.Max")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"最后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后","aria-hidden":"true"}},[t._v("#")]),t._v(" 最后")]),t._v(" "),a("p",[t._v("在没看重构这本书前，上面的编程情景实际上遇到过无数次，能隐约意识到这种方式不好，也能将数据项提取到类中，但是不能说清这样做的具体目的，以及好处。重构这本书给了我答案，读重构时总能将一些手法在自己以前的编码中找到对应的地方，这也是重构带来的益处。")])])},[],!1,null,null,null);s.default=e.exports}}]);